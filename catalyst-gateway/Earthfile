VERSION 0.7

#cspell: words rustup readelf nextest testci testdocs rustfmt toolsets USERARCH

# Set up our target toolchains, and copy our files.
builder:
    FROM github.com/input-output-hk/catalyst-ci/earthly/rust:v2.0.11+rust-base

    DO github.com/input-output-hk/catalyst-ci/earthly/rust:v2.0.11+SETUP --toolchain=rust-toolchain.toml

    COPY --dir .cargo .config Cargo.* clippy.toml deny.toml rustfmt.toml bin crates .

# Test rust build container - Use best architecture host tools.
hosted-check:
    FROM +builder

    DO github.com/input-output-hk/catalyst-ci/earthly/rust:v2.0.11+CHECK

# Test which runs check with all supported host tooling.  Needs qemu or rosetta to run.
# Only used to validate tooling is working across host toolsets.
all-hosts-check:    
    BUILD --platform=linux/amd64 --platform=linux/arm64 +hosted-check

hosted-build:
    ARG TARGETPLATFORM

    # Build the service
    FROM +builder
 
    DO github.com/input-output-hk/catalyst-ci/earthly/rust:v2.0.11+BUILD --bins="cat-gateway/cat-gateway"

    DO github.com/input-output-hk/catalyst-ci/earthly/rust:v2.0.11+SMOKE_TEST --bin="cat-gateway"

    SAVE ARTIFACT target/$TARGETARCH/doc doc
    SAVE ARTIFACT target/$TARGETARCH/release/cat-gateway cat-gateway

# Test which runs check with all supported host tooling.  Needs qemu or rosetta to run.
# Only used to validate tooling is working across host toolsets.
all-hosts-build:    
    BUILD --platform=linux/amd64 --platform=linux/arm64 +hosted-build


## -----------------------------------------------------------------------------
##
## Standard CI targets.
##
## These targets are discovered and executed automatically by CI.

# Run check using the most efficient host tooling
# CI Automated Entry point.
check:
    FROM busybox
    # This is necessary to pick the correct architecture build to suit the native machine.
    # It primarily ensures that Darwin/Arm builds work as expected without needing x86 emulation.
    # All target implementation of this should follow this pattern.
    ARG USERARCH

    IF [ "$USERARCH" == "arm64" ]
        BUILD --platform=linux/arm64 +hosted-check
    ELSE
        BUILD --platform=linux/amd64 +hosted-check
    END

# Run build using the most efficient host tooling
# CI Automated Entry point.
build:
    FROM busybox
    # This is necessary to pick the correct architecture build to suit the native machine.
    # It primarily ensures that Darwin/Arm builds work as expected without needing x86 emulation.
    # All target implementation of this should follow this pattern.
    ARG USERARCH

    IF [ "$USERARCH" == "arm64" ]
        BUILD --platform=linux/arm64 +hosted-build
    ELSE
        BUILD --platform=linux/amd64 +hosted-build
    END


# This step will build any packages we would intend to publish or integration test.
# package:
#    FROM scratch

# Run integration tests on all packages built during the `package` step.
# test:
#    FROM scratch

# Publish packages if all integration tests have passed. (Failure to pass tests will prevent packages being published.)
# publish:
#    FROM scratch

## -----------------------------------------------------------------------------

# This step simulates the full CI run for local purposes only.
local-ci-run:
    BUILD +check
    BUILD +build
    # BUILD +package
    # BUILD +test
    # BUILD +publish
