VERSION --try --global-cache 0.7

#cspell: words rustfmt toolsets USERARCH

# Set up our target toolchains, and copy our files.
builder:
    DO github.com/input-output-hk/catalyst-ci/earthly/rust:v2.11.1+SETUP

    COPY --dir .cargo .config Cargo.* clippy.toml deny.toml rustfmt.toml bin crates .

## -----------------------------------------------------------------------------
##
## Standard CI targets.
##
## These targets are discovered and executed automatically by CI.

# Run check using the most efficient host tooling
# CI Automated Entry point.
check:
    FROM +builder

    RUN /scripts/std_checks.py

# Test which runs check with all supported host tooling.  Needs qemu or rosetta to run.
# Only used to validate tooling is working across host toolsets.
all-hosts-check:
    BUILD --platform=linux/amd64 --platform=linux/arm64 +check

build:
    # Build the service
    FROM +builder

    TRY
        RUN /scripts/std_build.py \
                --cov_report="coverage-report.info" \
                --bins="cat-gateway/cat-gateway"
    FINALLY
        SAVE ARTIFACT --if-exists target/nextest/ci/junit.xml AS LOCAL cat-gateway.junit-report.xml
        SAVE ARTIFACT --if-exists coverage-report.info AS LOCAL cat-gateway.coverage-report.info
    END
    RUN ./target/$TARGETARCH/release/cat-gateway docs ./target/$TARGETARCH/doc/cat-gateway-api.json
    SAVE ARTIFACT target/$TARGETARCH/doc doc
    SAVE ARTIFACT target/$TARGETARCH/release/cat-gateway cat-gateway

# Test which runs check with all supported host tooling.  Needs qemu or rosetta to run.
# Only used to validate tooling is working across host toolsets.
all-hosts-build:
    BUILD --platform=linux/amd64 --platform=linux/arm64 +build

package-cat-gateway:
    ARG tag="latest"

    FROM alpine:3.19
    WORKDIR /cat-gateway

    RUN apk add --no-cache gcc bash

    COPY +build/cat-gateway .
    COPY ./scripts/entry.sh .

    ENTRYPOINT ./entry.sh
    SAVE IMAGE cat-gateway:$tag

package-cat-gateway-with-preprod-snapshot:
    ARG tag="latest"

    FROM +package-cat-gateway

    # copy preprod mithril snapshot to /tmp/preprod dir
    COPY github.com/input-output-hk/catalyst-ci/earthly/mithril_snapshot:v2.11.1+package-preprod-snapshot/snapshot /tmp/preprod

    SAVE IMAGE cat-gateway:$tag

# Publish packages if all integration tests have passed. (Failure to pass tests will prevent packages being published.)
# publish:
#    FROM scratch
