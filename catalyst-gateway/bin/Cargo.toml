[package]
name = "cat-data-service"
version.workspace = true
authors.workspace = true
edition.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
event-db = { workspace = true }

clap = { workspace = true, features = ["derive", "env"] }
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["fmt", "json", "time"] }

serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
serde_with = { workspace = true, features = ["macros"] }

tokio = { workspace = true, features = ["rt", "macros", "rt-multi-thread"] }
thiserror = { workspace = true }
axum = { workspace = true }
metrics = { workspace = true }
metrics-exporter-prometheus = { workspace = true }

tower-http = { workspace = true, features = ["cors"] }

rust_decimal = { workspace = true }

chrono = { workspace = true }

poem = { workspace = true, features = ["embed", "prometheus", "compression", "test"] }
poem-openapi = { workspace = true, features = [
    "openapi-explorer",
    "rapidoc",
    "redoc",
    "swagger-ui",
    "uuid",
    "url",
    "chrono",
] }
poem-extensions = { workspace = true }

# Metrics - Poem
opentelemetry-prometheus = { workspace = true }
opentelemetry = { workspace = true }
prometheus = { workspace = true }
cryptoxide = { workspace = true }
uuid = { workspace = true, features = ["v4", "serde"] }
lazy_static = { workspace = true }
url = { workspace = true }
dotenvy = { workspace = true }
panic-message = { workspace = true }
regex = { workspace = true }
tower = { workspace = true, features = ["util"] }
hyper = { workspace = true }
bytes = { workspace = true }
cpu-time = { workspace = true }
arc-swap = { workspace = true }
ulid = { workspace = true, features = ["serde", "uuid"] }
rust-embed = { workspace = true }
