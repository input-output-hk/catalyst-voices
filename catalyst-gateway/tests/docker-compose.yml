# cspell: words statusgossip socat

services:
  event-db:
    image: event-db:latest
    container_name: event-db
    environment:
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=CatalystEventDev
      - DB_DESCRIPTION="Catalyst Event DB"
      - DB_SUPERUSER=postgres
      - DB_SUPERUSER_PASSWORD=postgres
      - DB_USER=catalyst-event-dev
      - DB_USER_PASSWORD=CHANGE_ME

      - INIT_AND_DROP_DB=true
      - WITH_MIGRATIONS=false
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10

  # runs old migrations for the separate `postgres` service
  # a special package for applying migrations only up to "V2_**" migrations
  event-db-v1-migrations:
    image: event-db:v1
    container_name: event-db-v1-migrations
    environment:
      - DB_HOST=event-db
      - DB_PORT=5432
      - DB_NAME=CatalystEventDev
      - DB_SUPERUSER=postgres
      - DB_SUPERUSER_PASSWORD=postgres
      - DB_USER=catalyst-event-dev
      - DB_USER_PASSWORD=CHANGE_ME

      - INIT_AND_DROP_DB=false
      - WITH_SEED_DATA=.
      - WITH_MIGRATIONS=true
    restart: "no"
    depends_on:
      event-db:
        condition: service_healthy

  # runs migrations for the separate `postgres` service
  event-db-migrations:
    image: event-db:latest
    container_name: event-db-migrations
    environment:
      - DB_HOST=event-db
      - DB_PORT=5432
      - DB_NAME=CatalystEventDev
      - DB_SUPERUSER=postgres
      - DB_SUPERUSER_PASSWORD=postgres
      - DB_USER=catalyst-event-dev
      - DB_USER_PASSWORD=CHANGE_ME

      - INIT_AND_DROP_DB=false
      - WITH_MIGRATIONS=true
    restart: "no"
    depends_on:
      event-db-v1-migrations:
        condition: service_started

  scylla-node:
    image: scylladb/scylla:latest
    container_name: scylla-node
    restart: unless-stopped
    command: --smp 2 --memory 1G --overprovisioned 1 --api-address 0.0.0.0
    ports:
      - 9042:9042
    healthcheck:
      test: cqlsh -e "SHOW VERSION" || exit 1
      interval: 15s
      timeout: 30s
      retries: 10

  cat-gateway:
    image: cat-gateway:latest
    container_name: cat-gateway
    ports:
      - "3030:3030"
    healthcheck:
      test: "curl -s -i localhost:3030/api/v1/health/started | head -n 1 | grep 204"
      start_period: 30s
      interval: 30s
      timeout: 30s
      # approximately a 25 minutes of waiting
      retries: 50
    environment:
      - EVENT_DB_URL=postgres://catalyst-event-dev:CHANGE_ME@${EVENT_DB_URL:-event-db}/CatalystEventDev
      - CASSANDRA_PERSISTENT_URL=${INDEX_DB_URL:-scylla-node:9042}
      - CASSANDRA_VOLATILE_URL=${INDEX_DB_URL:-scylla-node:9042}
      - CHAIN_NETWORK=${ENV_TARGET:-Preprod}
      - INTERNAL_API_KEY=123
      - YES_I_REALLY_WANT_TO_PANIC=panic attack
      - SERVICE_LIVE_COUNTER_THRESHOLD=100
      - SERVICE_LIVE_TIMEOUT_INTERVAL=30
      # - LOG_LEVEL=error
      # - RUST_LOG="error,cat_gateway=debug,cardano_chain_follower=debug,mithril-client=debug"
    ports:
      - 3030:3030
    depends_on:
      event-db-migrations:
        condition: service_started
      scylla-node:
        condition: service_healthy

  rust-tests-runner:
    image: rust-tests-runner:latest
    container_name: rust-tests-runner
    environment:
      - EVENT_DB_URL=postgres://catalyst-event-dev:CHANGE_ME@event-db/CatalystEventDev
      - CASSANDRA_PERSISTENT_URL=scylla-node:9042
      - CASSANDRA_VOLATILE_URL=scylla-node:9042
    depends_on:
      event-db-migrations:
        condition: service_started
      scylla-node:
        condition: service_healthy

  haproxy:
    image: haproxy-node:latest
    container_name: haproxy
    user: root
    ports:
      - "18080:18080"
      - "18090:18090"
      - "9999:9999"
    healthcheck:
      test: [ "CMD", "sh", "-c", "echo 'show info' | socat tcp:localhost:9999 stdio | grep -q ^Name" ]
      interval: 10s
      timeout: 3s
      retries: 3
    depends_on:
      - event-db
      - scylla-node

  api-tests-runner:
    image: api-tests-runner:latest
    container_name: api-tests-runner
    environment:
      - CAT_GATEWAY_TEST_URL=http://cat-gateway:3030
      - CAT_GATEWAY_INTERNAL_API_KEY=123
      - SERVICE_LIVE_COUNTER_THRESHOLD=100
      - SERVICE_LIVE_TIMEOUT_INTERVAL=30
    command: >
      poetry run pytest -m "${API_TEST_MARKS}" -s --junitxml junit-report.xml --cov integration --cov-report lcov
    depends_on:
      cat-gateway:
        condition: service_healthy

  schemathesis-runner:
    image: schemathesis-runner:latest
    container_name: schemathesis-runner
    environment:
      - API_SPEC=${API_SPEC:-http://cat-gateway:3030/docs/cat-gateway.json}
      - WAIT_FOR_SCHEMA=${WAIT_FOR_SCHEMA:-500}
      - MAX_RESPONSE_TIME=${MAX_RESPONSE_TIME:-5000}
      - HYPOTHESIS_MAX_EXAMPLES=${HYPOTHESIS_MAX_EXAMPLES:-100}
      # place a seed value to reproduce some specific schemathesis test scenario
      # - SEED=""
    depends_on:
      cat-gateway:
        condition: service_healthy
