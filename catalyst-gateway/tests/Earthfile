VERSION 0.7

package-schemathesis:
    FROM python:3.12-alpine3.19

    ARG tag="latest"
    ARG max_examples=1000
    ARG max_response_time=300
    ARG wait_for_schema=15
    ARG workers=1
    ARG schema_version=30
    ARG openapi_spec

    RUN apk add --no-cache gcc musl-dev
    RUN python -m pip install schemathesis
    RUN mkdir /results

    VOLUME /results
    ENTRYPOINT st run --checks all $openapi_spec --workers=$workers --wait-for-schema=$wait_for_schema \
                        --max-response-time=$max_response_time --hypothesis-max-examples=$max_examples \
                            --data-generation-method=all --skip-deprecated-operations \
                                --force-schema-version=$schema_version --show-trace --force-color  \
                                  --junit-xml /results/junit-report.xml --cassette-path=/results/cassette.yaml \
                                # TODO: https://github.com/input-output-hk/catalyst-voices/issues/330
                                --exclude-checks content_type_conformance \
                                --exclude-checks response_schema_conformance

    SAVE IMAGE schemathesis:$tag

# test-fuzzer-api - Fuzzy test cat-gateway using openapi specs
fuzzer-api:
    FROM earthly/dind:alpine-3.19
    RUN apk update && apk add iptables-legacy # workaround for https://github.com/earthly/earthly/issues/3784
    RUN apk add yq
    ARG DB_URL="postgres://catalyst-event-dev:CHANGE_ME@localhost/CatalystEventDev"
    ARG CAT_ADDRESS="127.0.0.1:3030"
    ARG OPENAPI_SPEC="http://127.0.0.1:3030/docs/cat-gateway.json"

    COPY schemathesis-docker-compose.yml .
    WITH DOCKER \
        --compose schemathesis-docker-compose.yml \
        --load schemathesis:latest=(+package-schemathesis --openapi_spec=$OPENAPI_SPEC) \
        --load event-db:latest=(../event-db+build) \
        --load cat-gateway:latest=(../+package-cat-gateway --address=$CAT_ADDRESS --db_url=$DB_URL) \
        --service event-db \
        --service cat-gateway \
        --allow-privileged
        RUN docker run --net=host --name=st schemathesis:latest || echo fail > fail && \
                docker logs cat-gateway > ./cat-gateway.log && \
                    docker cp st:/results/junit-report.xml junit-report.xml && \
                        docker cp st:/results/cassette.yaml cassette.yaml
    END
    WAIT
        SAVE ARTIFACT junit-report.xml AS LOCAL schemathesis.junit-report.xml
        SAVE ARTIFACT cat-gateway.log AS LOCAL cat-gateway.log
        SAVE ARTIFACT cassette.yaml AS LOCAL cassette.yaml
    END
    IF [ -f fail ]
        RUN echo -e "\033[0;31mSchemathesis test run failed\n" && \
            echo -e "\033[0;31mFailed tests:" && \
            yq -PC '.http_interactions.[] | select(.status == "FAILURE")' cassette.yaml && \
            echo -e "\033[0;31mCatalyst Gateway logs:" && \
            jq --color-output . cat-gateway.log cat-gateway.log && \
            exit 1
    END

# test-lint-openapi - OpenAPI linting from an artifact
# testing whether the OpenAPI generated during build stage follows good practice.
# TODO: https://github.com/input-output-hk/catalyst-voices/issues/408
# enable this linting after this issue will be solved
lint-openapi:
    FROM github.com/input-output-hk/catalyst-ci/earthly/spectral:v2.4.0+spectral-base
    # Copy the doc artifact.
    COPY ../+build/doc ./doc
    # Scan the doc directory where type of file is JSON.
    DO github.com/input-output-hk/catalyst-ci/earthly/spectral:v2.4.0+BUILD_SPECTRAL --dir=./doc --file_type="json"