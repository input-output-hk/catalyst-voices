; An envelope for cardano metadata which holds the x509 metadata.
; We do thsi so that the underlying metadata is not restircted to
; cardano ledger implementation.

; uses 
x509_envelope = {
	0: purpose, ; What purpose does this metadata serve.
	1: required_signers_hash, ; A hash of the `required_signers` field from the transaction the metadata is posted with.
	chunk_type: [ + x509_chunk ]
	99: [ + validation_signature ] ; The signature/s of the x509 certificate metadata record.
}

; Chunk Types - Allows to identify how the chunk data is compressed to save on-chain space.
; 2 : Chunk data is encoded raw
; 3 : Data is compressed with Brotli and then chunked.
; 4 : Data is compressed with ZSTD and then chunked.
chunk_type = ( 2..4 )

; An individual purpose or set or purposes
purpose = ( individual_purpose [ * individual_purpose ] )

; A V4 UUID encoded as per https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.2
individual_purpose = (bytes .size (16))

; Transaction Required Signers Hash - Blake2b-224
required_signers_hash = (bytes .size (28))

; A single x509 chunk
x509_chunk = (bytes .size (0..64))

; A Validation Signature
validation_signature = (bytes .size (0..64))

; Signatures are created by creating the x509_envelope with key `99`, but without all expected signatures set to 0x00's.
; Each signature is then computed over that binary data.
; Each blank signature is then replaced with the real signature.
..
; To validate the opposite occurs, the signatures are copied out of the envelope.
; The signature fields are set to 0x00's
; The resulting binary buffer is then checked against the signatures which were embedded.

; Explanation:
; The purpose of the Envelope is to ensure that metadata is not transportable between
; transactions.
;
; Transactions contain a `required_signers` field.  
; By including a hash of that field within the metatdata, we can validated the transaction it was intended for.
; By signing the metadata envelope with the keys contained within the x509 chunks, we ensure that its not possible
; to transpose key certs from one transaction to another.

; This envelope is general in structure, and that structure ensures metadata can not be transposed or tampoered with outside of the inteheg 
