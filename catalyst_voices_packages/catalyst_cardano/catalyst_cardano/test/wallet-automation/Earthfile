VERSION 0.8
IMPORT github.com/input-output-hk/catalyst-ci/earthly/flutter:v3.1.25 AS flutter-ci

deps:
    FROM mcr.microsoft.com/playwright:v1.45.2-jammy
    WORKDIR /wallet-automation

    RUN apt-get update && apt-get install -y \
        libnss3 libatk-bridge2.0-0 libdrm-dev libxkbcommon-dev libgbm-dev libasound-dev libatspi2.0-0 libxshmfence-dev postgresql-client xvfb python3.11 python3-pip && \
        apt-get clean && \
        rm -rf /var/lib/apt/lists/*

    COPY package.json .
    COPY package-lock.json .

    RUN npm install
    ENV PATH "/wallet-automation/node_modules/.bin:$PATH"

src:
    FROM +deps
    COPY --dir wallet .
    COPY playwright.config.ts .
    COPY global-setup.ts .
    COPY typhon-tests.spec.ts .

package-test:
    FROM +src
    ENTRYPOINT ["/bin/sh", "-c", "/usr/bin/xvfb-run npm test", ""]
    ARG tag='latest'
    SAVE IMAGE test:$tag

builder:
    DO flutter-ci+SETUP
    COPY ../../../../../+repo-catalyst-voices-all/repo .
    DO flutter-ci+BOOTSTRAP

build-web:
    FROM +builder
    ARG WORKDIR=/frontend/catalyst_voices_packages/catalyst_cardano/catalyst_cardano/example
    DO flutter-ci+BUILD_WEB --TARGET=lib/main.dart --WORKDIR=$WORKDIR
    SAVE ARTIFACT web

package-app:
    FROM nginx:alpine3.18
    ARG tag='latest'
    #TODO disable cache
    COPY +build-web/web /usr/share/nginx/html/
    SAVE IMAGE test-app:$tag

test:
    FROM earthly/dind:alpine-3.19
    COPY compose.yml .
    WITH DOCKER \
        --compose compose.yml \
        --load test-app:latest=(+package-app) \
        --load test:latest=(+package-test) \
        --service test-app \
        --allow-privileged

        RUN docker run --network=default_default test:latest
    END
