import 'dart:typed_data';
import 'package:catalyst_cardano_serialization/catalyst_cardano_serialization.dart';
import 'package:convert/convert.dart';
import 'package:test/test.dart';

/// Native scripts hashes generated by `cardano-cli` using Cardano's Simple
/// scripts [examples](https://developers.cardano.org/docs/get-started/cardano-cli/simple-scripts/)
const nativeScriptsJSON = [
  {
    'json': {
      'type': 'sig',
      'keyHash': 'e09d36c79dec9bd1b3d9e152247701cd0bb860b5ebfd1de8abb6735a',
    },
    'hash': '208bdcaf2d83ae026964e23659c703a377473168a39cbdc2b0241115',
  },
  {
    'json': {
      'type': 'all',
      'scripts': [
        {
          'type': 'sig',
          'keyHash': 'e09d36c79dec9bd1b3d9e152247701cd0bb860b5ebfd1de8abb6735a',
        },
        {
          'type': 'sig',
          'keyHash': 'a687dcc24e00dd3caafbeb5e68f97ca8ef269cb6fe971345eb951756',
        },
        {
          'type': 'sig',
          'keyHash': '0bd1d702b2e6188fe0857a6dc7ffb0675229bab58c86638ffa87ed6d',
        }
      ],
    },
    'hash': '477e52b3116b62fe8cd34a312615f5fcd678c94e1d6cdb86c1a3964c',
  },
  {
    'json': {
      'type': 'all',
      'scripts': [
        {'type': 'after', 'slot': 1000},
        {
          'type': 'sig',
          'keyHash': '966e394a544f242081e41d1965137b1bb412ac230d40ed5407821c37',
        }
      ],
    },
    'hash': '120125c6dea2049988eb0dc8ddcc4c56dd48628d45206a2d0bc7e55b',
  },
  {
    'json': {
      'type': 'atLeast',
      'required': 2,
      'scripts': [
        {
          'type': 'sig',
          'keyHash': '2f3d4cf10d0471a1db9f2d2907de867968c27bca6272f062cd1c2413',
        },
        {
          'type': 'sig',
          'keyHash': 'f856c0c5839bab22673747d53f1ae9eed84afafb085f086e8e988614',
        },
        {
          'type': 'sig',
          'keyHash': 'b275b08c999097247f7c17e77007c7010cd19f20cc086ad99d398538',
        }
      ],
    },
    'hash': '1e3e60975af4971f7cc02ed4d90c87abaafd2dd070a42eafa6f5e939',
  },
  {
    'json': {
      'type': 'any',
      'scripts': [
        {
          'type': 'sig',
          'keyHash': 'b275b08c999097247f7c17e77007c7010cd19f20cc086ad99d398538',
        },
        {
          'type': 'all',
          'scripts': [
            {'type': 'before', 'slot': 3000},
            {
              'type': 'sig',
              'keyHash':
                  '966e394a544f242081e41d1965137b1bb412ac230d40ed5407821c37',
            }
          ],
        }
      ],
    },
    'hash': '6519f942518b8761f4b02e1403365b7d7befae1eb488b7fffcbab33f',
  },
  {
    'json': {
      'type': 'any',
      'scripts': [
        {
          'type': 'sig',
          'keyHash': 'd92b712d1882c3b0f75b6f677e0b2cbef4fbc8b8121bb9dde324ff09',
        },
        {
          'type': 'sig',
          'keyHash': '4d780ed1bfc88cbd4da3f48de91fe728c3530d662564bf5a284b5321',
        },
        {
          'type': 'sig',
          'keyHash': '3a94d6d4e786a3f5d439939cafc0536f6abc324fb8404084d6034bf8',
        }
      ],
    },
    'hash': '7004b5785308380e2dac2955d234b60aa4b786057dd5a93984439d32',
  }
];

/// Plutus V2 scripts generated by [aiken](https://github.com/aiken-lang/aiken)'s build.
const plutusV2ScriptsJSON = [
  {
    'compiledCode': '590130010000323232323232323223223225333008533009490145546'
        '8652054696d65732030332f4a616e2f32303039204368616e63656c6c'
        '6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757'
        '420666f722062616e6b730014a02930a99804a4811856616c69646174'
        '6f722072657475726e65642066616c73650013656533333300b001153'
        '330063370e900018041baa0011533300a300937540022930a99803802'
        '0b0a998038020b0a998038020b0a998038020b0a998038020b0a99803'
        '8020b29999998048008a99980219b8748000c018dd50008a999804180'
        '39baa001149854cc01400c5854cc01400c5854cc01400c5854cc01400'
        'c5854cc01400c5854cc01400c592401085f723a20566f696400490108'
        '5f643a20566f6964005734ae7155ceaab9e5573eae91',
    'hash': '2e72caa0f64fc6f9cd53ae781154fbbb135c7625f10fcdf603566bc9',
  },
  {
    'compiledCode': '589101000032323232323232232253330054a22930a99803248118566'
        '16c696461746f722072657475726e65642066616c7365001365653333'
        '33008001153330033370e900018029baa001153330073006375400229'
        '30a998020010b0a998020010b0a998020010b0a998020010b0a998020'
        '010b0a998020010b2481085f723a20566f6964005734ae7155ceaab9e'
        '5573eae91',
    'hash': '12b96851f48bac3b2758f3e221208d584d043ec4e6715a9955d5209d',
  },
  {
    'compiledCode': '590132010000323232323232323232322232322533300732325333009'
        '3005300b3754601e60200042a666012600a60166ea8c8cc0040040088'
        '94ccc03c0045300103d87a800013232533300d3375e602660206ea800'
        '802c4cdd2a40006602400497ae01330040040013013002301100114a2'
        '294054cc02924121657870656374204d696e74285f706f6c6963795f6'
        '96429203d20707572706f736500163758601c60166ea8c038004c028d'
        'd50008a4c2a6601092011856616c696461746f722072657475726e656'
        '42066616c73650013656533333300d002153330053001300737540042'
        'a66601260106ea8008526153300600416153300600416153300600416'
        '153300600416153300600416153300600416370e9000249085f723a20'
        '566f6964005734ae7155ceaab9e5573eae815d0aba257481',
    'hash': 'cb9d6b7cabd2b8b944c857abeb0518c155ba500fcc80c086f859b8ea',
  },
];

/// Plutus scripts' hashes generated by `cardano-cli`.
/// > **Note**: The cborHex of a `cardano-cli` outputs are double decoded.
const doubleEncodedPlutusScripts = [
  {
    'plutusScript': {
      'type': 'PlutusScriptV1',
      'description': '',
      'cborHex': '454401020304',
    },
    'hash': '4cf0813cc182d96de6b469751636defeb91421fda73e8916cb951653',
  },
  {
    'plutusScript': {
      'type': 'PlutusScriptV2',
      'description': '',
      'cborHex': '454401020304',
    },
    'hash': '9d59620cf11f039336221486bb7e6b10adb59f308f6710f050bbc02d',
  },
  {
    'plutusScript': {
      'type': 'PlutusScriptV3',
      'description': '',
      'cborHex': '454401020304',
    },
    'hash': '42ad9d5ffaca5d74e97c3f4ffc8f8fae8876362ed86f24db328529f3',
  }
];

void main() {
  group(NativeScript, () {
    test('hashes', () {
      for (final script in nativeScriptsJSON) {
        final json = script['json']! as Map<String, dynamic>;
        final simpleScript = NativeScript.fromJSON(json);

        expect(
          simpleScript.hash,
          equals(hex.decode(script['hash']! as String)),
        );
      }
    });
  });

  group(PlutusScript, () {
    test('hashes (V2 only)', () {
      for (final script in plutusV2ScriptsJSON) {
        final scriptCborBytes =
            Uint8List.fromList(hex.decode(script['compiledCode']!));
        final plutusScript = PlutusV2Script(scriptCborBytes);

        expect(plutusScript.hash, equals(hex.decode(script['hash']!)));
      }
    });
  });

  group(PlutusScript, () {
    test('hashes (double decoded scripts)', () {
      for (final json in doubleEncodedPlutusScripts) {
        final script = json['plutusScript']! as Map<String, dynamic>;
        final hash = json['hash']! as String;
        final type = script['type'] as String;
        final cborHex = script['cborHex'] as String;
        final cborBytes = Uint8List.fromList(hex.decode(cborHex));

        final plutusScript = switch (type) {
          'PlutusScriptV1' => PlutusV1Script(cborBytes),
          'PlutusScriptV2' => PlutusV2Script(cborBytes),
          'PlutusScriptV3' => PlutusV3Script(cborBytes),
          _ => throw Exception('Unknown script type: $type'),
        };

        expect(plutusScript.hash, equals(hex.decode(hash)));
      }
    });
  });
}
