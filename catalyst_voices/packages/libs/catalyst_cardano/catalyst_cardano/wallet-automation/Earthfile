VERSION 0.8
IMPORT github.com/input-output-hk/catalyst-ci/earthly/flutter:v3.2.31 AS flutter-ci
IMPORT github.com/input-output-hk/catalyst-ci/earthly/flutter/installer:v3.2.31 AS flutter-installer
IMPORT github.com/input-output-hk/catalyst-ci/earthly/playwright:temp1 AS playwright-ci

deps:
    DO playwright-ci+SETUP --workdir=/wallet-automation

    COPY package.json .
    COPY package-lock.json .

    RUN npm install
    ENV PATH "/wallet-automation/node_modules/.bin:$PATH"

src:
    FROM +deps
    COPY --dir pages ./pages
    COPY --dir tests ./tests
    COPY --dir utils ./utils
    COPY playwright.config.ts .
    COPY test-fixtures.ts .
    COPY setup.ts .

package-test:
    FROM +src
    ENV APP_URL http://test-app:80
    RUN mkdir /results
    VOLUME /results
    ENTRYPOINT ["/bin/sh", "-c", "/usr/bin/xvfb-run --auto-servernum npm test", ""]
    ARG tag='latest'
    SAVE IMAGE test:$tag

builder:
    DO flutter-ci+SETUP
    COPY ../../../../../+repo-catalyst-voices/repo .
    DO flutter-ci+BOOTSTRAP

build-web:
    FROM +builder
    ARG WORKDIR=/frontend/packages/libs/catalyst_cardano/catalyst_cardano/example
    DO flutter-ci+BUILD_WEB --TARGET=lib/main.dart --WORKDIR=$WORKDIR
    SAVE ARTIFACT web

package-app:
    FROM nginx:alpine3.20-slim
    ARG tag='latest'
    COPY +build-web/web /app
    COPY ./nginx.conf /etc/nginx/nginx.conf
    EXPOSE 80
    SAVE IMAGE test-app:$tag

nightly-test:
    FROM earthly/dind:ubuntu-20.04-docker-27.2.1-1
    COPY compose.yml .
    RUN apt-get update --fix-missing && \
                apt-get install -y \
                apt-utils \
                curl \
                unzip
    DO --no-cache flutter-installer+INSTALL_CHROME_LINUX64
    WITH DOCKER \
        --compose compose.yml \
        --load test-app:latest=(+package-app) \
        --load test:latest=(+package-test)

        RUN docker run --network=default_default --name=test test:latest ; \
            docker cp test:/results/cardano-wallet.junit-report.xml cardano-wallet.junit-report.xml ;
    END
    WAIT
        SAVE ARTIFACT cardano-wallet.junit-report.xml AS LOCAL cardano-wallet.junit-report.xml
    END
