// Mocks generated by Mockito 5.4.4 from annotations
// in catalyst_cardano_serialization/test/rbac/x509_certificate_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:catalyst_key_derivation/src/bip32_ed25519/bip32_ed25519_private_key.dart'
    as _i5;
import 'package:catalyst_key_derivation/src/bip32_ed25519/bip32_ed25519_public_key.dart'
    as _i4;
import 'package:catalyst_key_derivation/src/bip32_ed25519/bip32_ed25519_signature.dart'
    as _i3;
import 'package:cbor/cbor.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCborValue_0 extends _i1.SmartFake implements _i2.CborValue {
  _FakeCborValue_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBip32Ed25519XSignature_1 extends _i1.SmartFake
    implements _i3.Bip32Ed25519XSignature {
  _FakeBip32Ed25519XSignature_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBip32Ed25519XPublicKey_2 extends _i1.SmartFake
    implements _i4.Bip32Ed25519XPublicKey {
  _FakeBip32Ed25519XPublicKey_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBip32Ed25519XPrivateKey_3 extends _i1.SmartFake
    implements _i5.Bip32Ed25519XPrivateKey {
  _FakeBip32Ed25519XPrivateKey_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Bip32Ed25519XPrivateKey].
///
/// See the documentation for Mockito's code generation for more information.
class MockBip32Ed25519XPrivateKey extends _i1.Mock
    implements _i5.Bip32Ed25519XPrivateKey {
  @override
  List<int> get bytes => (super.noSuchMethod(
        Invocation.getter(#bytes),
        returnValue: <int>[],
        returnValueForMissingStub: <int>[],
      ) as List<int>);

  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
        returnValueForMissingStub: <Object?>[],
      ) as List<Object?>);

  @override
  _i2.CborValue toCbor() => (super.noSuchMethod(
        Invocation.method(
          #toCbor,
          [],
        ),
        returnValue: _FakeCborValue_0(
          this,
          Invocation.method(
            #toCbor,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeCborValue_0(
          this,
          Invocation.method(
            #toCbor,
            [],
          ),
        ),
      ) as _i2.CborValue);

  @override
  String toHex() => (super.noSuchMethod(
        Invocation.method(
          #toHex,
          [],
        ),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.method(
            #toHex,
            [],
          ),
        ),
        returnValueForMissingStub: _i6.dummyValue<String>(
          this,
          Invocation.method(
            #toHex,
            [],
          ),
        ),
      ) as String);

  @override
  _i7.Future<_i3.Bip32Ed25519XSignature> sign(List<int>? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #sign,
          [message],
        ),
        returnValue: _i7.Future<_i3.Bip32Ed25519XSignature>.value(
            _FakeBip32Ed25519XSignature_1(
          this,
          Invocation.method(
            #sign,
            [message],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.Bip32Ed25519XSignature>.value(
            _FakeBip32Ed25519XSignature_1(
          this,
          Invocation.method(
            #sign,
            [message],
          ),
        )),
      ) as _i7.Future<_i3.Bip32Ed25519XSignature>);

  @override
  _i7.Future<bool> verify(
    List<int>? message, {
    required _i3.Bip32Ed25519XSignature? signature,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verify,
          [message],
          {#signature: signature},
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i4.Bip32Ed25519XPublicKey> derivePublicKey() =>
      (super.noSuchMethod(
        Invocation.method(
          #derivePublicKey,
          [],
        ),
        returnValue: _i7.Future<_i4.Bip32Ed25519XPublicKey>.value(
            _FakeBip32Ed25519XPublicKey_2(
          this,
          Invocation.method(
            #derivePublicKey,
            [],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i4.Bip32Ed25519XPublicKey>.value(
            _FakeBip32Ed25519XPublicKey_2(
          this,
          Invocation.method(
            #derivePublicKey,
            [],
          ),
        )),
      ) as _i7.Future<_i4.Bip32Ed25519XPublicKey>);

  @override
  _i7.Future<_i5.Bip32Ed25519XPrivateKey> derivePrivateKey(
          {required String? path}) =>
      (super.noSuchMethod(
        Invocation.method(
          #derivePrivateKey,
          [],
          {#path: path},
        ),
        returnValue: _i7.Future<_i5.Bip32Ed25519XPrivateKey>.value(
            _FakeBip32Ed25519XPrivateKey_3(
          this,
          Invocation.method(
            #derivePrivateKey,
            [],
            {#path: path},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i5.Bip32Ed25519XPrivateKey>.value(
                _FakeBip32Ed25519XPrivateKey_3(
          this,
          Invocation.method(
            #derivePrivateKey,
            [],
            {#path: path},
          ),
        )),
      ) as _i7.Future<_i5.Bip32Ed25519XPrivateKey>);

  @override
  void drop() => super.noSuchMethod(
        Invocation.method(
          #drop,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Bip32Ed25519XPublicKey].
///
/// See the documentation for Mockito's code generation for more information.
class MockBip32Ed25519XPublicKey extends _i1.Mock
    implements _i4.Bip32Ed25519XPublicKey {
  @override
  List<int> get bytes => (super.noSuchMethod(
        Invocation.getter(#bytes),
        returnValue: <int>[],
        returnValueForMissingStub: <int>[],
      ) as List<int>);

  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
        returnValueForMissingStub: <Object?>[],
      ) as List<Object?>);

  @override
  _i2.CborValue toCbor({List<int>? tags = const []}) => (super.noSuchMethod(
        Invocation.method(
          #toCbor,
          [],
          {#tags: tags},
        ),
        returnValue: _FakeCborValue_0(
          this,
          Invocation.method(
            #toCbor,
            [],
            {#tags: tags},
          ),
        ),
        returnValueForMissingStub: _FakeCborValue_0(
          this,
          Invocation.method(
            #toCbor,
            [],
            {#tags: tags},
          ),
        ),
      ) as _i2.CborValue);

  @override
  String toHex() => (super.noSuchMethod(
        Invocation.method(
          #toHex,
          [],
        ),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.method(
            #toHex,
            [],
          ),
        ),
        returnValueForMissingStub: _i6.dummyValue<String>(
          this,
          Invocation.method(
            #toHex,
            [],
          ),
        ),
      ) as String);

  @override
  _i7.Future<bool> verify(
    List<int>? message, {
    required _i3.Bip32Ed25519XSignature? signature,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verify,
          [message],
          {#signature: signature},
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [Bip32Ed25519XSignature].
///
/// See the documentation for Mockito's code generation for more information.
class MockBip32Ed25519XSignature extends _i1.Mock
    implements _i3.Bip32Ed25519XSignature {
  @override
  List<int> get bytes => (super.noSuchMethod(
        Invocation.getter(#bytes),
        returnValue: <int>[],
        returnValueForMissingStub: <int>[],
      ) as List<int>);

  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
        returnValueForMissingStub: <Object?>[],
      ) as List<Object?>);

  @override
  _i2.CborValue toCbor() => (super.noSuchMethod(
        Invocation.method(
          #toCbor,
          [],
        ),
        returnValue: _FakeCborValue_0(
          this,
          Invocation.method(
            #toCbor,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeCborValue_0(
          this,
          Invocation.method(
            #toCbor,
            [],
          ),
        ),
      ) as _i2.CborValue);

  @override
  String toHex() => (super.noSuchMethod(
        Invocation.method(
          #toHex,
          [],
        ),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.method(
            #toHex,
            [],
          ),
        ),
        returnValueForMissingStub: _i6.dummyValue<String>(
          this,
          Invocation.method(
            #toHex,
            [],
          ),
        ),
      ) as String);
}
