// Mocks generated by Mockito 5.4.4 from annotations
// in catalyst_voices_repositories/test/src/catalyst_data_gateway_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:catalyst_voices_models/catalyst_voices_models.dart' as _i5;
import 'package:catalyst_voices_repositories/src/catalyst_data_gateway_repository.dart'
    as _i3;
import 'package:catalyst_voices_services/generated/catalyst_gateway/cat_gateway_api.enums.swagger.dart'
    as _i7;
import 'package:catalyst_voices_services/generated/catalyst_gateway/cat_gateway_api.swagger.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:result_type/result_type.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<S, F> extends _i1.SmartFake implements _i2.Result<S, F> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CatalystDataGatewayRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCatalystDataGatewayRepository extends _i1.Mock
    implements _i3.CatalystDataGatewayRepository {
  @override
  _i4.Future<_i2.Result<void, _i5.NetworkErrors>> getHealthStarted() =>
      (super.noSuchMethod(
        Invocation.method(
          #getHealthStarted,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<void, _i5.NetworkErrors>>.value(
            _FakeResult_0<void, _i5.NetworkErrors>(
          this,
          Invocation.method(
            #getHealthStarted,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<void, _i5.NetworkErrors>>.value(
                _FakeResult_0<void, _i5.NetworkErrors>(
          this,
          Invocation.method(
            #getHealthStarted,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<void, _i5.NetworkErrors>>);

  @override
  _i4.Future<_i2.Result<void, _i5.NetworkErrors>> getHealthReady() =>
      (super.noSuchMethod(
        Invocation.method(
          #getHealthReady,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<void, _i5.NetworkErrors>>.value(
            _FakeResult_0<void, _i5.NetworkErrors>(
          this,
          Invocation.method(
            #getHealthReady,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<void, _i5.NetworkErrors>>.value(
                _FakeResult_0<void, _i5.NetworkErrors>(
          this,
          Invocation.method(
            #getHealthReady,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<void, _i5.NetworkErrors>>);

  @override
  _i4.Future<_i2.Result<void, _i5.NetworkErrors>> getHealthLive() =>
      (super.noSuchMethod(
        Invocation.method(
          #getHealthLive,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<void, _i5.NetworkErrors>>.value(
            _FakeResult_0<void, _i5.NetworkErrors>(
          this,
          Invocation.method(
            #getHealthLive,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<void, _i5.NetworkErrors>>.value(
                _FakeResult_0<void, _i5.NetworkErrors>(
          this,
          Invocation.method(
            #getHealthLive,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<void, _i5.NetworkErrors>>);

  @override
  _i4.Future<_i2.Result<_i6.StakeInfo, _i5.NetworkErrors>>
      getCardanoStakedAdaStakeAddress({
    required String? stakeAddress,
    _i7.Network? network = _i7.Network.mainnet,
    DateTime? dateTime,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getCardanoStakedAdaStakeAddress,
              [],
              {
                #stakeAddress: stakeAddress,
                #network: network,
                #dateTime: dateTime,
              },
            ),
            returnValue:
                _i4.Future<_i2.Result<_i6.StakeInfo, _i5.NetworkErrors>>.value(
                    _FakeResult_0<_i6.StakeInfo, _i5.NetworkErrors>(
              this,
              Invocation.method(
                #getCardanoStakedAdaStakeAddress,
                [],
                {
                  #stakeAddress: stakeAddress,
                  #network: network,
                  #dateTime: dateTime,
                },
              ),
            )),
            returnValueForMissingStub:
                _i4.Future<_i2.Result<_i6.StakeInfo, _i5.NetworkErrors>>.value(
                    _FakeResult_0<_i6.StakeInfo, _i5.NetworkErrors>(
              this,
              Invocation.method(
                #getCardanoStakedAdaStakeAddress,
                [],
                {
                  #stakeAddress: stakeAddress,
                  #network: network,
                  #dateTime: dateTime,
                },
              ),
            )),
          ) as _i4.Future<_i2.Result<_i6.StakeInfo, _i5.NetworkErrors>>);

  @override
  _i4.Future<_i2.Result<_i6.SyncState, _i5.NetworkErrors>> getCardanoSyncState(
          {_i7.Network? network = _i7.Network.mainnet}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCardanoSyncState,
          [],
          {#network: network},
        ),
        returnValue:
            _i4.Future<_i2.Result<_i6.SyncState, _i5.NetworkErrors>>.value(
                _FakeResult_0<_i6.SyncState, _i5.NetworkErrors>(
          this,
          Invocation.method(
            #getCardanoSyncState,
            [],
            {#network: network},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<_i6.SyncState, _i5.NetworkErrors>>.value(
                _FakeResult_0<_i6.SyncState, _i5.NetworkErrors>(
          this,
          Invocation.method(
            #getCardanoSyncState,
            [],
            {#network: network},
          ),
        )),
      ) as _i4.Future<_i2.Result<_i6.SyncState, _i5.NetworkErrors>>);
}
