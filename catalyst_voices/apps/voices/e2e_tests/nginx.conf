events {
    worker_connections 1024;
}

http {
    upstream flutter_backend {
        server flutter-web:8000;
    }

    upstream gateway_backend {
        server cat-gateway:3030;
    }

    server {
        listen 3030;
        server_name localhost;

        # Logging for debugging
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log debug;

        # Proxy headers configuration
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support for Flutter hot reload (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Route /api requests to the gateway
        location /api/ {
            proxy_pass http://gateway_backend;
            proxy_buffering off;
            proxy_request_buffering off;

            # Timeouts for long-running API calls
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Route /docs to gateway (OpenAPI docs)
        location /docs {
            proxy_pass http://gateway_backend;
        }

        # Health check endpoint - check both services
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'OK';
        }

        # Everything else goes to Flutter
        location / {
            proxy_pass http://flutter_backend;

            # Support for Flutter web development
            proxy_buffering off;
            proxy_cache off;

            # CORS headers for Flutter web
            add_header Cross-Origin-Opener-Policy same-origin;
            add_header Cross-Origin-Embedder-Policy require-corp;
        }
    }
}