VERSION 0.8

IMPORT ../catalyst-gateway AS catalyst-gateway
IMPORT github.com/input-output-hk/catalyst-ci/earthly/flutter:v3.2.23 AS flutter-ci

# repo-catalyst-voices - Creates artifacts of all configuration files,
# packages and folders related to catalyst_voices frontend.
repo-catalyst-voices:
    FROM scratch

    WORKDIR /repo
    COPY --dir . .

    SAVE ARTIFACT /repo repo

# Copy all the necessary files and running bootstrap
builder:
    DO flutter-ci+SETUP
    COPY +repo-catalyst-voices/repo .
    DO flutter-ci+BOOTSTRAP

# Runs static analysis on the code.
check-static-analysis:
    FROM +builder
    DO flutter-ci+ANALYZE

# Runs code formatting checks.
check-code-formatting:
    FROM +builder
    DO flutter-ci+FORMAT

# Runs dry-run publish to verify that publishable packages can be published.
check-package-publishing:
    FROM +builder
    DO flutter-ci+PUBLISH_DRY_RUN

# Runs the license checks for Catalyst Voices.
check-license:
    FROM +builder
    RUN melos run license-check

# Run unit tests
test-unit:
    FROM +builder
    DO flutter-ci+UNIT_TESTS

# Build web version of Catalyst Voices
build-web:
    FROM +builder
    ARG RUN_ON_PR=true
    ARG SENTRY_DSN

    ARG WORKDIR=/frontend/apps/voices
    IF [ $RUN_ON_PR = true ]
        DO flutter-ci+BUILD_WEB --WORKDIR=$WORKDIR --BUILD_MODE='--profile' --TARGET=lib/configs/main_web.dart
    ELSE
        DO flutter-ci+BUILD_WEB --WORKDIR=$WORKDIR --TARGET=lib/configs/main_web.dart --SENTRY_DSN=$SENTRY_DSN
        SAVE ARTIFACT web
    END

package:
    FROM nginx:alpine3.20-slim
    ARG tag='latest'

    COPY +build-web/web /app
    COPY ./nginx.conf /etc/nginx/nginx.conf
    EXPOSE 80

    SAVE IMAGE voices-frontend:$tag

docker:
   FROM +package

   ARG container="voices"
   ARG tag="latest"

   SAVE IMAGE ${container}:${tag}